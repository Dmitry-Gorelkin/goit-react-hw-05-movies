{"version":3,"file":"static/js/206.998f544e.chunk.js","mappings":"qSAGaA,GAAqBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oNAElB,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEH,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,IAAnB,IAIC,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,MAAnB,IAKDC,GAAiBR,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8UAEd,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEH,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,IAAnB,IAGC,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOI,KAAnB,IACU,SAAAP,GAAC,OAAIA,EAAEC,MAAME,OAAOE,MAAnB,IACJ,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAKR,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOE,MAAnB,I,SCkCd,EA5DkB,WAAO,IAAD,IACdG,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACpD,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,0HAEGC,EAAAA,EAAAA,IAAuBb,GAF1B,OAEfc,EAFe,OAGbC,EAAyCD,EAAzCC,MAAOC,EAAkCF,EAAlCE,SAAUC,EAAwBH,EAAxBG,OAAQC,EAAgBJ,EAAhBI,YAC3BC,EAAaD,EAAW,0CACSA,GACnCE,EACEC,EAAeJ,EAAOK,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IAAYC,KAAK,KAElDf,EAAS,CAAEK,MAAAA,EAAOC,SAAAA,EAAUK,aAAAA,EAAcF,WAAAA,IATrB,kDAWrBO,EAAAA,GAAAA,MAAA,4UAXqB,0DAAH,qDAiBtBd,GACD,GAAE,CAACZ,IAEJ,IAAQe,EAA8CN,EAA9CM,MAAOC,EAAuCP,EAAvCO,SAAUK,EAA6BZ,EAA7BY,aAAcF,EAAeV,EAAfU,WAEvC,OACE,4BACE,0BACE,SAAC9B,EAAD,CAAoBsC,GAAIvB,EAAawB,QAArC,wBAIF,4BACE,gBAAKC,IAAKV,EAAYW,IAAKf,KAC3B,wBAAKA,KACL,4CACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIK,QAEN,4BACE,mDACA,SAACvB,EAAD,CAAgB6B,GAAG,OAAnB,mBACA,SAAC7B,EAAD,CAAgB6B,GAAG,UAAnB,yBAEF,0BAEE,SAAC,EAAAI,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,UAKT,C","sources":["pages/MovieCard/MovieCard.styled.jsx","pages/MovieCard/MovieCard.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLinkCardBack = styled(NavLink)`\n  display: block;\n  padding: ${p => p.theme.space[3]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.dark};\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.accent};\n    box-shadow: 1px 1px 10px 3px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const StyledLinkCard = styled(NavLink)`\n  display: block;\n  padding: ${p => p.theme.space[3]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.dark};\n\n  &.active {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.accent};\n    border-radius: ${p => p.theme.space[3]}px;\n  }\n\n  &:not(:last-child) {\n    margin-right: ${p => p.theme.space[4]}px;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { fhechGetDetailshMovies } from 'api';\nimport image from '../../img/film-card.jpg';\nimport { StyledLinkCardBack, StyledLinkCard } from './MovieCard.styled';\n// import { Loader } from 'components/Loader/Loader';\n\nconst MovieCard = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    const movieDetailsFech = async () => {\n      try {\n        const movieData = await fhechGetDetailshMovies(id);\n        const { title, overview, genres, poster_path } = movieData;\n        const posterPath = poster_path\n          ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n          : image;\n        const genresString = genres.map(e => e.name).join(' ');\n\n        setMovie({ title, overview, genresString, posterPath });\n      } catch {\n        toast.error(\n          `Что-то пошло не так, попробуйте перезагрузить страницу попозже.`\n        );\n      }\n    };\n\n    movieDetailsFech();\n  }, [id]);\n\n  const { title, overview, genresString, posterPath } = movie;\n\n  return (\n    <div>\n      <div>\n        <StyledLinkCardBack to={backLinkHref.current}>\n          Go back\n        </StyledLinkCardBack>\n      </div>\n      <div>\n        <img src={posterPath} alt={title} />\n        <h2>{title}</h2>\n        <p>User Score: ???</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genresString}</p>\n      </div>\n      <div>\n        <p>Additional information</p>\n        <StyledLinkCard to=\"cast\">Cast</StyledLinkCard>\n        <StyledLinkCard to=\"reviews\">Reviews</StyledLinkCard>\n      </div>\n      <div>\n        {/* <Suspense fallback={<Loader />}> */}\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n"],"names":["StyledLinkCardBack","styled","NavLink","p","theme","space","colors","dark","accent","StyledLinkCard","white","id","useParams","location","useLocation","backLinkHref","useRef","state","from","useState","movie","setMovie","useEffect","movieDetailsFech","fhechGetDetailshMovies","movieData","title","overview","genres","poster_path","posterPath","image","genresString","map","e","name","join","toast","to","current","src","alt","Suspense","fallback"],"sourceRoot":""}