{"version":3,"file":"static/js/247.fbbda54e.chunk.js","mappings":"mTAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAkB,mCAAG,6FAC1BC,EAAU,CACdC,IAAK,sBACLC,OAAQ,CACNC,QAASN,IAJmB,UAQTC,EAAAA,EAAAA,GAAME,GARG,cAQ1BI,EAR0B,yBASzBA,EAASC,MATgB,2CAAH,qDAYlBC,EAAiB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAC9CR,EAAU,CACdC,IAAK,gBACLC,OAAQ,CACNC,QAASN,EACTU,MAAAA,EACAC,KAAAA,IAN2B,UAURV,EAAAA,EAAAA,GAAME,GAVE,cAUzBI,EAVyB,yBAWxBA,EAASC,MAXe,2CAAH,sDAcjBI,EAAsB,mCAAG,WAAMC,GAAN,gFAC9BV,EAAU,CACdC,IAAI,UAAD,OAAYS,GACfR,OAAQ,CACNC,QAASN,IAJuB,UAQbC,EAAAA,EAAAA,GAAME,GARO,cAQ9BI,EAR8B,yBAS7BA,EAASC,MAToB,2CAAH,sDAYtBM,EAAqB,mCAAG,WAAMD,GAAN,gFAC7BV,EAAU,CACdC,IAAI,UAAD,OAAYS,EAAZ,YACHR,OAAQ,CACNC,QAASN,IAJsB,UAQZC,EAAAA,EAAAA,GAAME,GARM,cAQ7BI,EAR6B,yBAS5BA,EAASC,MATmB,2CAAH,sDAYrBO,EAAqB,mCAAG,WAAMF,GAAN,gFAC7BV,EAAU,CACdC,IAAI,UAAD,OAAYS,EAAZ,YACHR,OAAQ,CACNC,QAASN,IAJsB,UAQZC,EAAAA,EAAAA,GAAME,GARM,cAQ7BI,EAR6B,yBAS5BA,EAASC,MATmB,2CAAH,qD,8ICNlC,UA3Ca,WACX,IAAQQ,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,gHAEMR,EAAAA,EAAAA,IAAsBE,GAF5B,OAEZO,EAFY,OAIZC,EAAeD,EAAUJ,KAAKM,KAAI,SAAAC,GACtC,IAAQV,EAAsCU,EAAtCV,GAAIW,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,UAAWC,EAAiBH,EAAjBG,aAI7B,MAAO,CAAEb,GAAAA,EAAIW,KAAAA,EAAMC,UAAAA,EAAWE,YAHVD,EAAY,0CACOA,GACnCE,EAEL,IACDX,GAAQ,OAAII,IAXM,gDAalBQ,EAAAA,GAAAA,MAAA,4UAbkB,yDAAH,qDAmBnBV,GACD,GAAE,CAACN,KAGF,wBACGG,EAAKM,KAAI,SAAAC,GACR,IAAQV,EAAqCU,EAArCV,GAAIW,EAAiCD,EAAjCC,KAAMC,EAA2BF,EAA3BE,UAAWE,EAAgBJ,EAAhBI,YAC7B,OACE,2BACE,gBAAKG,IAAKH,EAAaI,IAAI,UAC3B,uBAAIP,KACJ,uCAAeC,OAHRZ,EAMZ,KAGN,C","sources":["api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a3bd63f16fb7aecb4bc4aafac25ce962';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fhechPopularMovies = async () => {\n  const options = {\n    url: '/trending/movie/day',\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nexport const fhechSearchMovies = async (query, page = 1) => {\n  const options = {\n    url: '/search/movie',\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nexport const fhechGetDetailshMovies = async idMovie => {\n  const options = {\n    url: `/movie/${idMovie}`,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nexport const fhechGetCreditsMovies = async idMovie => {\n  const options = {\n    url: `/movie/${idMovie}/credits`,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nexport const fhechGetReviewsMovies = async idMovie => {\n  const options = {\n    url: `/movie/${idMovie}/reviews`,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { fhechGetCreditsMovies } from 'api';\nimport image from '../../img/film-card.jpg';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const movieCastFech = async () => {\n      try {\n        const movieData = await fhechGetCreditsMovies(id);\n\n        const arrMovieData = movieData.cast.map(e => {\n          const { id, name, character, profile_path } = e;\n          const profilePath = profile_path\n            ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n            : image;\n          return { id, name, character, profilePath };\n        });\n        setCast([...arrMovieData]);\n      } catch {\n        toast.error(\n          `Что-то пошло не так, попробуйте перезагрузить страницу попозже.`\n        );\n      }\n    };\n\n    movieCastFech();\n  }, [id]);\n\n  return (\n    <ul>\n      {cast.map(e => {\n        const { id, name, character, profilePath } = e;\n        return (\n          <li key={id}>\n            <img src={profilePath} alt=\"name\" />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","axios","fhechPopularMovies","options","url","params","api_key","response","data","fhechSearchMovies","query","page","fhechGetDetailshMovies","idMovie","fhechGetCreditsMovies","fhechGetReviewsMovies","id","useParams","useState","cast","setCast","useEffect","movieCastFech","movieData","arrMovieData","map","e","name","character","profile_path","profilePath","image","toast","src","alt"],"sourceRoot":""}