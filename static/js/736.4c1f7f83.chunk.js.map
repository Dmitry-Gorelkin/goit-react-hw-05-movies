{"version":3,"file":"static/js/736.4c1f7f83.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a3bd63f16fb7aecb4bc4aafac25ce962';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fhechPopularMovies = async () => {\n  const options = {\n    url: '/trending/movie/day',\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nexport const fhechSearchMovies = async (query, page = 1) => {\n  const options = {\n    url: '/search/movie',\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nexport const fhechGetDetailshMovies = async idMovie => {\n  const options = {\n    url: `/movie/${idMovie}`,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nexport const fhechGetCreditsMovies = async idMovie => {\n  const options = {\n    url: `/movie/${idMovie}/credits`,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nexport const fhechGetReviewsMovies = async (idMovie, page = 1) => {\n  const options = {\n    url: `/movie/${idMovie}/reviews`,\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastWraper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: ${p => p.theme.space[3]}px;\n`;\n\nexport const CastCard = styled.li`\n  display: block;\n  padding: ${p => p.theme.space[3]}px;\n`;\n\nexport const CastImg = styled.img`\n  width: 100px;\n`;\n\nexport const CastName = styled.p`\n  font-weight: bold;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { fhechGetCreditsMovies } from 'api';\nimport image from '../../img/film-card.jpg';\nimport { Loader } from 'components/Loader/Loader';\nimport { CastWraper, CastCard, CastImg, CastName } from './Cast.styled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState('ideal');\n\n  useEffect(() => {\n    const movieCastFech = async () => {\n      setStatus('laoding');\n      try {\n        const movieData = await fhechGetCreditsMovies(id);\n\n        if (movieData.cast.length === 0) {\n          setStatus('noIdeal');\n          return;\n        }\n\n        const arrMovieData = movieData.cast.map(e => {\n          const { id, name, character, profile_path } = e;\n          const profilePath = profile_path\n            ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n            : image;\n          return { id, name, character, profilePath };\n        });\n        setCast([...arrMovieData]);\n        setStatus('ideal');\n      } catch {\n        toast.error(\n          `Что-то пошло не так, попробуйте перезагрузить страницу попозже.`\n        );\n        setStatus('error');\n      }\n    };\n\n    movieCastFech();\n  }, [id]);\n\n  if (status === 'laoding') {\n    return <Loader />;\n  }\n\n  if (status === 'ideal') {\n    return (\n      <CastWraper>\n        {cast.map(e => {\n          const { id, name, character, profilePath } = e;\n          return (\n            <CastCard key={id}>\n              <CastImg src={profilePath} alt=\"name\" />\n              <CastName>{name}</CastName>\n              <p>Character: {character}</p>\n            </CastCard>\n          );\n        })}\n      </CastWraper>\n    );\n  }\n\n  if (status === 'noIdeal') {\n    return <p>We don't have any cast for this movie.</p>;\n  }\n\n  if (status === 'error') {\n    return;\n  }\n};\n\nexport default Cast;\n"],"names":["API_KEY","axios","fhechPopularMovies","options","url","params","api_key","response","data","fhechSearchMovies","query","page","fhechGetDetailshMovies","idMovie","fhechGetCreditsMovies","fhechGetReviewsMovies","CastWraper","styled","p","theme","space","CastCard","CastImg","CastName","id","useParams","useState","cast","setCast","status","setStatus","useEffect","movieCastFech","movieData","length","arrMovieData","map","e","name","character","profile_path","profilePath","image","toast","Loader","src","alt"],"sourceRoot":""}